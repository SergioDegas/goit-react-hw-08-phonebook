{"version":3,"file":"static/js/517.fe0af326.chunk.js","mappings":"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","sources":["components/ContactList/ContactItem/ContactItem.styled.jsx","components/ContactList/ContactItem/ContactItem.jsx","redux/contacts/selectors.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Form/Form.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const TextStyled = styled.p`\n  margin-right: ${({ theme }) => `${theme.spacing(5)}`};\n  margin-left: auto;\n`;\nexport const Button = styled.button`\n  outline: none;\n  border: none;\n  width: ${({ theme }) => `${theme.spacing(20)}`};\n  color: #fff;\n  border-radius: ${({ theme }) => `${theme.spacing(3)}`};\n\n  background-color: ${({ theme }) => `${theme.colors.blue}`};\n  cursor: pointer;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {  TextStyled } from './ContactItem.styled';\nimport { ContactDeleteApi } from 'redux/contacts/operations';\nimport { Button, } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(ContactDeleteApi(id));\n\n  return (\n    <>\n      <p>{name}</p>\n      <TextStyled>{number}</TextStyled>\n      <Button\n        variant=\"outlined\"\n        startIcon={<DeleteIcon />}\n        type=\"button\"\n        onClick={handleDelete}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilterByName = state => state.filter;\n\nexport const selectContact = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = createSelector(\n  [selectContact, selectFilterByName],\n  (contacts, filter) => {\n    const filterByName = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterByName)\n    );\n  }\n);\n","import styled from 'styled-components';\n\n\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: ${({ theme }) => `${theme.spacing(3)}`};\n  width: ${({ theme }) => `${theme.spacing(100)}`};\n`;\n","import ContactItem from 'components/ContactList/ContactItem';\nimport { selectContact, selectFilter } from 'redux/contacts/selectors';\n\nimport { useSelector } from 'react-redux';\nimport { Item } from './ContactList.styled';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContact);\n  const contactFilter = useSelector(selectFilter);\n  return (\n    <ul>\n      {contacts.length > 0 &&\n        contactFilter.map(({ id, name, number }) => {\n          return (\n            <Item key={id}>\n              <ContactItem name={name} id={id} number={number} />\n            </Item>\n          );\n        })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\n\n\nexport const FormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: ${({ theme }) => `${theme.spacing(6)}`};\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  font-size: 26px;\n`;\n\nexport const Input = styled.input`\n  padding: ${({ theme }) => `${theme.spacing(2)}`};\n  border: 1px solid #2a2a2a;\n  border-radius: ${({ theme }) => `${theme.spacing(3)}`};\n  font-family: sans-serif;\n  font-size: ${({ theme }) => `${theme.spacing(4)}`};\n  outline: none;\n  margin-top: ${({ theme }) => `${theme.spacing(2)}`};\n  ::placeholder {\n    color: ${({ theme }) => `${theme.colors.blue}`};\n    font-size: ${({ theme }) => `${theme.spacing(4)}`};\n  }\n`;\n\nexport const Button = styled.button`\n  outline: none;\n  border: none;\n  width: ${({ theme }) => `${theme.spacing(33)}`};\n  color: #fff;\n  border-radius: ${({ theme }) => `${theme.spacing(3)}`};\n  margin-top: ${({ theme }) => `${theme.spacing(3)}`};\n  margin-right: auto;\n  margin-left: auto;\n  background-color: ${({ theme }) => `${theme.colors.blue}`};\n  cursor: pointer;\n`;","import { setByNameFilter } from 'redux/contacts/filtersSlice';\nimport { selectFilterByName } from 'redux/contacts/selectors';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { FormStyled, Input, Label } from 'components/Form/Form.styled';\n\n\n\nconst Filter = () => {\n  const filter = useSelector(selectFilterByName);\n  const dispatch = useDispatch();\n\n  const filterByName = e => {\n    // console.log(e.currentTarget.value);\n    dispatch(setByNameFilter(e.target.value));\n  };\n  return (\n    <FormStyled>\n      <Label>\n        <Input\n          placeholder=\" Contact Filter\"\n          type=\"text\"\n          value={filter}\n          onChange={filterByName}\n        ></Input>\n      </Label>\n    </FormStyled>\n  );\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport {  FormStyled, Input, Label } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContact } from 'redux/contacts/selectors';\nimport { ContactAddApi } from 'redux/contacts/operations';\nimport { Button } from '@mui/material';\nimport { AddIcCallOutlined } from '@mui/icons-material';\n\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    // console.log(contacts);\n\n    if (contacts.find(contact => contact.name === name)) {\n      setName('');\n      return toast.error(\n        `The contact with this name ${name} is already in the phone book`\n      );\n    }\n    dispatch(ContactAddApi({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <Label>\n          <Input\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\" Name\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n    \n        <Label>\n          <Input\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            placeholder=\" Number\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcCallOutlined />}\n          type=\"submit\"\n        >\n          Add contacts\n      \n        </Button>\n      </FormStyled>\n      <Toaster />\n    </>\n  );\n};\nexport default Form;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Oval\n      height={80}\n      width={80}\n      color=\"#b8c480\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"oval-loading\"\n      secondaryColor=\"#F4442E\"\n      strokeWidth={2}\n      strokeWidthSecondary={0}\n    />\n  );\n};\nexport default Loader;\n","import ContactList from \"components/ContactList\";\nimport Filter from \"components/Filter\";\nimport Form from \"components/Form\";\nimport Loader from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContact } from \"redux/contacts/operations\";\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n  return (\n    <>\n      <main>\n        <Form />\n        <Filter />\n        {isLoading && !error && <Loader />}\n        {error && <p>{error}</p>}\n        {!isLoading && <ContactList />}\n      </main>\n    </>\n  );\n};\nexport default Contacts;"],"names":["TextStyled","styled","theme","spacing","colors","blue","name","number","id","dispatch","useDispatch","variant","startIcon","Delete","type","onClick","ContactDeleteApi","selectFilterByName","state","filter","selectContact","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","createSelector","filterByName","toLowerCase","includes","Item","useSelector","contactFilter","length","map","FormStyled","Label","Input","placeholder","value","onChange","e","setByNameFilter","target","useState","setName","setNumber","handleChange","onSubmit","preventDefault","find","contact","toast","ContactAddApi","pattern","title","required","AddIcCallOutlined","height","width","color","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","useEffect","fetchContact"],"sourceRoot":""}